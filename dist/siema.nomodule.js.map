{"version":3,"file":"siema.nomodule.js","sources":["../src/siema.js"],"sourcesContent":["/**\n * Hi :-) This is a class representing a Siema.\n */\nexport default class Siema {\n  /**\n   * Create a Siema.\n   * @param {Object} options - Optional settings object.\n   */\n  constructor(options) {\n    // Merge defaults with user's settings\n    this.config = Siema.mergeSettings(options);\n\n    // Resolve selector's type\n    this.selector = typeof this.config.selector === 'string' ? document.querySelector(this.config.selector) : this.config.selector;\n\n    // Early throw if selector doesn't exists\n    if (this.selector === null) {\n      throw new Error('Something wrong with your selector ðŸ˜­');\n    }\n\n    // update perPage number dependable of user value\n    this.resolveSlidesNumber();\n\n    // Create global references\n    this.selectorWidth = this.selector.offsetWidth;\n    this.innerElements = [].slice.call(this.selector.children);\n    this.currentSlide = this.config.loop ?\n      this.config.startIndex % this.innerElements.length :\n      Math.max(0, Math.min(this.config.startIndex, this.innerElements.length - this.perPage));\n    this.transformProperty = Siema.webkitOrNot();\n\n    // Bind all event handlers for referencability\n    ['resizeHandler', 'touchstartHandler', 'touchendHandler', 'touchmoveHandler', 'mousedownHandler', 'mouseupHandler', 'mouseleaveHandler', 'mousemoveHandler', 'clickHandler'].forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n\n    // Build markup and apply required styling to elements\n    this.init();\n  }\n\n\n  /**\n   * Overrides default settings with custom ones.\n   * @param {Object} options - Optional settings object.\n   * @returns {Object} - Custom Siema settings.\n   */\n  static mergeSettings(options) {\n    const settings = {\n      selector: '.siema',\n      duration: 200,\n      easing: 'ease-out',\n      perPage: 1,\n      startIndex: 0,\n      draggable: true,\n      multipleDrag: true,\n      threshold: 20,\n      loop: false,\n      rtl: false,\n      onInit: () => {},\n      onChange: () => {},\n    };\n\n    const userSttings = options;\n    for (const attrname in userSttings) {\n      settings[attrname] = userSttings[attrname];\n    }\n\n    return settings;\n  }\n\n\n  /**\n   * Determine if browser supports unprefixed transform property.\n   * Google Chrome since version 26 supports prefix-less transform\n   * @returns {string} - Transform property supported by client.\n   */\n  static webkitOrNot() {\n    const style = document.documentElement.style;\n    if (typeof style.transform === 'string') {\n      return 'transform';\n    }\n    return 'WebkitTransform';\n  }\n\n  /**\n   * Attaches listeners to required events.\n   */\n  attachEvents() {\n    // Resize element on window resize\n    window.addEventListener('resize', this.resizeHandler);\n\n    // If element is draggable / swipable, add event handlers\n    if (this.config.draggable) {\n      // Keep track pointer hold and dragging distance\n      this.pointerDown = false;\n      this.drag = {\n        startX: 0,\n        endX: 0,\n        startY: 0,\n        letItGo: null,\n        preventClick: false,\n      };\n\n      // Touch events\n      this.selector.addEventListener('touchstart', this.touchstartHandler);\n      this.selector.addEventListener('touchend', this.touchendHandler);\n      this.selector.addEventListener('touchmove', this.touchmoveHandler);\n\n      // Mouse events\n      this.selector.addEventListener('mousedown', this.mousedownHandler);\n      this.selector.addEventListener('mouseup', this.mouseupHandler);\n      this.selector.addEventListener('mouseleave', this.mouseleaveHandler);\n      this.selector.addEventListener('mousemove', this.mousemoveHandler);\n\n      // Click\n      this.selector.addEventListener('click', this.clickHandler);\n    }\n  }\n\n\n  /**\n   * Detaches listeners from required events.\n   */\n  detachEvents() {\n    window.removeEventListener('resize', this.resizeHandler);\n    this.selector.removeEventListener('touchstart', this.touchstartHandler);\n    this.selector.removeEventListener('touchend', this.touchendHandler);\n    this.selector.removeEventListener('touchmove', this.touchmoveHandler);\n    this.selector.removeEventListener('mousedown', this.mousedownHandler);\n    this.selector.removeEventListener('mouseup', this.mouseupHandler);\n    this.selector.removeEventListener('mouseleave', this.mouseleaveHandler);\n    this.selector.removeEventListener('mousemove', this.mousemoveHandler);\n    this.selector.removeEventListener('click', this.clickHandler);\n  }\n\n\n  /**\n   * Builds the markup and attaches listeners to required events.\n   */\n  init() {\n    this.attachEvents();\n\n    // hide everything out of selector's boundaries\n    this.selector.style.overflow = 'hidden';\n\n    // rtl or ltr\n    this.selector.style.direction = this.config.rtl ? 'rtl' : 'ltr';\n\n    // build a frame and slide to a currentSlide\n    this.buildSliderFrame();\n\n    this.config.onInit.call(this);\n  }\n\n\n  /**\n   * Build a sliderFrame and slide to a current item.\n   */\n  buildSliderFrame() {\n    const widthItem = this.selectorWidth / this.perPage;\n    const itemsToBuild = this.config.loop ? this.innerElements.length + (2 * this.perPage) : this.innerElements.length;\n\n    // Create frame and apply styling\n    this.sliderFrame = document.createElement('div');\n    this.sliderFrame.style.width = `${widthItem * itemsToBuild}px`;\n    this.enableTransition();\n\n    if (this.config.draggable) {\n      this.selector.style.cursor = '-webkit-grab';\n    }\n\n    // Create a document fragment to put slides into it\n    const docFragment = document.createDocumentFragment();\n\n    // Loop through the slides, add styling and add them to document fragment\n    if (this.config.loop) {\n      for (let i = this.innerElements.length - this.perPage; i < this.innerElements.length; i++) {\n        const element = this.buildSliderFrameItem(this.innerElements[i].cloneNode(true));\n        docFragment.appendChild(element);\n      }\n    }\n    for (let i = 0; i < this.innerElements.length; i++) {\n      const element = this.buildSliderFrameItem(this.innerElements[i]);\n      docFragment.appendChild(element);\n    }\n    if (this.config.loop) {\n      for (let i = 0; i < this.perPage; i++) {\n        const element = this.buildSliderFrameItem(this.innerElements[i].cloneNode(true));\n        docFragment.appendChild(element);\n      }\n    }\n\n    // Add fragment to the frame\n    this.sliderFrame.appendChild(docFragment);\n\n    // Clear selector (just in case something is there) and insert a frame\n    this.selector.innerHTML = '';\n    this.selector.appendChild(this.sliderFrame);\n\n    // Go to currently active slide after initial build\n    this.slideToCurrent();\n  }\n\n  buildSliderFrameItem(elm) {\n    const elementContainer = document.createElement('div');\n    elementContainer.style.cssFloat = this.config.rtl ? 'right' : 'left';\n    elementContainer.style.float = this.config.rtl ? 'right' : 'left';\n    elementContainer.style.width = `${this.config.loop ? 100 / (this.innerElements.length + (this.perPage * 2)) : 100 / (this.innerElements.length)}%`;\n    elementContainer.appendChild(elm);\n    return elementContainer;\n  }\n\n\n  /**\n   * Determinates slides number accordingly to clients viewport.\n   */\n  resolveSlidesNumber() {\n    if (typeof this.config.perPage === 'number') {\n      this.perPage = this.config.perPage;\n    }\n    else if (typeof this.config.perPage === 'object') {\n      this.perPage = 1;\n      for (const viewport in this.config.perPage) {\n        if (window.innerWidth >= viewport) {\n          this.perPage = this.config.perPage[viewport];\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Go to previous slide.\n   * @param {number} [howManySlides=1] - How many items to slide backward.\n   * @param {function} callback - Optional callback function.\n   */\n  prev(howManySlides = 1, callback) {\n    // early return when there is nothing to slide\n    if (this.innerElements.length <= this.perPage) {\n      return;\n    }\n\n    const beforeChange = this.currentSlide;\n\n    if (this.config.loop) {\n      const isNewIndexClone = this.currentSlide - howManySlides < 0;\n      if (isNewIndexClone) {\n        this.disableTransition();\n\n        const mirrorSlideIndex = this.currentSlide + this.innerElements.length;\n        const mirrorSlideIndexOffset = this.perPage;\n        const moveTo = mirrorSlideIndex + mirrorSlideIndexOffset;\n        const offset = (this.config.rtl ? 1 : -1) * moveTo * (this.selectorWidth / this.perPage);\n        const dragDistance = this.config.draggable ? this.drag.endX - this.drag.startX : 0;\n\n        this.sliderFrame.style[this.transformProperty] = `translate3d(${offset + dragDistance}px, 0, 0)`;\n        this.currentSlide = mirrorSlideIndex - howManySlides;\n      }\n      else {\n        this.currentSlide = this.currentSlide - howManySlides;\n      }\n    }\n    else {\n      this.currentSlide = Math.max(this.currentSlide - howManySlides, 0);\n    }\n\n    if (beforeChange !== this.currentSlide) {\n      this.slideToCurrent(this.config.loop);\n      this.config.onChange.call(this);\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n\n\n  /**\n   * Go to next slide.\n   * @param {number} [howManySlides=1] - How many items to slide forward.\n   * @param {function} callback - Optional callback function.\n   */\n  next(howManySlides = 1, callback) {\n    // early return when there is nothing to slide\n    if (this.innerElements.length <= this.perPage) {\n      return;\n    }\n\n    const beforeChange = this.currentSlide;\n\n    if (this.config.loop) {\n      const isNewIndexClone = this.currentSlide + howManySlides > this.innerElements.length - this.perPage;\n      if (isNewIndexClone) {\n        this.disableTransition();\n\n        const mirrorSlideIndex = this.currentSlide - this.innerElements.length;\n        const mirrorSlideIndexOffset = this.perPage;\n        const moveTo = mirrorSlideIndex + mirrorSlideIndexOffset;\n        const offset = (this.config.rtl ? 1 : -1) * moveTo * (this.selectorWidth / this.perPage);\n        const dragDistance = this.config.draggable ? this.drag.endX - this.drag.startX : 0;\n\n        this.sliderFrame.style[this.transformProperty] = `translate3d(${offset + dragDistance}px, 0, 0)`;\n        this.currentSlide = mirrorSlideIndex + howManySlides;\n      }\n      else {\n        this.currentSlide = this.currentSlide + howManySlides;\n      }\n    }\n    else {\n      this.currentSlide = Math.min(this.currentSlide + howManySlides, this.innerElements.length - this.perPage);\n    }\n    if (beforeChange !== this.currentSlide) {\n      this.slideToCurrent(this.config.loop);\n      this.config.onChange.call(this);\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n\n\n  /**\n   * Disable transition on sliderFrame.\n   */\n  disableTransition() {\n    this.sliderFrame.style.webkitTransition = `all 0ms ${this.config.easing}`;\n    this.sliderFrame.style.transition = `all 0ms ${this.config.easing}`;\n  }\n\n\n  /**\n   * Enable transition on sliderFrame.\n   */\n  enableTransition() {\n    this.sliderFrame.style.webkitTransition = `all ${this.config.duration}ms ${this.config.easing}`;\n    this.sliderFrame.style.transition = `all ${this.config.duration}ms ${this.config.easing}`;\n  }\n\n\n  /**\n   * Go to slide with particular index\n   * @param {number} index - Item index to slide to.\n   * @param {function} callback - Optional callback function.\n   */\n  goTo(index, callback) {\n    if (this.innerElements.length <= this.perPage) {\n      return;\n    }\n    const beforeChange = this.currentSlide;\n    this.currentSlide = this.config.loop ?\n      index % this.innerElements.length :\n      Math.min(Math.max(index, 0), this.innerElements.length - this.perPage);\n    if (beforeChange !== this.currentSlide) {\n      this.slideToCurrent();\n      this.config.onChange.call(this);\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n\n\n  /**\n   * Moves sliders frame to position of currently active slide\n   */\n  slideToCurrent(enableTransition) {\n    const currentSlide = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide;\n    const offset = (this.config.rtl ? 1 : -1) * currentSlide * (this.selectorWidth / this.perPage);\n\n    if (enableTransition) {\n      // This one is tricky, I know but this is a perfect explanation:\n      // https://youtu.be/cCOL7MC4Pl0\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          this.enableTransition();\n          this.sliderFrame.style[this.transformProperty] = `translate3d(${offset}px, 0, 0)`;\n        });\n      });\n    }\n    else {\n      this.sliderFrame.style[this.transformProperty] = `translate3d(${offset}px, 0, 0)`;\n    }\n  }\n\n\n  /**\n   * Recalculate drag /swipe event and reposition the frame of a slider\n   */\n  updateAfterDrag() {\n    const movement = (this.config.rtl ? -1 : 1) * (this.drag.endX - this.drag.startX);\n    const movementDistance = Math.abs(movement);\n    const howManySliderToSlide = this.config.multipleDrag ? Math.ceil(movementDistance / (this.selectorWidth / this.perPage)) : 1;\n\n    const slideToNegativeClone = movement > 0 && this.currentSlide - howManySliderToSlide < 0;\n    const slideToPositiveClone = movement < 0 && this.currentSlide + howManySliderToSlide > this.innerElements.length - this.perPage;\n\n    if (movement > 0 && movementDistance > this.config.threshold && this.innerElements.length > this.perPage) {\n      this.prev(howManySliderToSlide);\n    }\n    else if (movement < 0 && movementDistance > this.config.threshold && this.innerElements.length > this.perPage) {\n      this.next(howManySliderToSlide);\n    }\n    this.slideToCurrent(slideToNegativeClone || slideToPositiveClone);\n  }\n\n\n  /**\n   * When window resizes, resize slider components as well\n   */\n  resizeHandler() {\n    // update perPage number dependable of user value\n    this.resolveSlidesNumber();\n\n    // relcalculate currentSlide\n    // prevent hiding items when browser width increases\n    if (this.currentSlide + this.perPage > this.innerElements.length) {\n      this.currentSlide = this.innerElements.length <= this.perPage ? 0 : this.innerElements.length - this.perPage;\n    }\n\n    this.selectorWidth = this.selector.offsetWidth;\n\n    this.buildSliderFrame();\n  }\n\n\n  /**\n   * Clear drag after touchend and mouseup event\n   */\n  clearDrag() {\n    this.drag = {\n      startX: 0,\n      endX: 0,\n      startY: 0,\n      letItGo: null,\n      preventClick: this.drag.preventClick\n    };\n  }\n\n\n  /**\n   * touchstart event handler\n   */\n  touchstartHandler(e) {\n    // Prevent dragging / swiping on inputs, selects and textareas\n    const ignoreSiema = ['TEXTAREA', 'OPTION', 'INPUT', 'SELECT'].indexOf(e.target.nodeName) !== -1;\n    if (ignoreSiema) {\n      return;\n    }\n\n    e.stopPropagation();\n    this.pointerDown = true;\n    this.drag.startX = e.touches[0].pageX;\n    this.drag.startY = e.touches[0].pageY;\n  }\n\n\n  /**\n   * touchend event handler\n   */\n  touchendHandler(e) {\n    e.stopPropagation();\n    this.pointerDown = false;\n    this.enableTransition();\n    if (this.drag.endX) {\n      this.updateAfterDrag();\n    }\n    this.clearDrag();\n  }\n\n\n  /**\n   * touchmove event handler\n   */\n  touchmoveHandler(e) {\n    e.stopPropagation();\n\n    if (this.drag.letItGo === null) {\n      this.drag.letItGo = Math.abs(this.drag.startY - e.touches[0].pageY) < Math.abs(this.drag.startX - e.touches[0].pageX);\n    }\n\n    if (this.pointerDown && this.drag.letItGo) {\n      e.preventDefault();\n      this.drag.endX = e.touches[0].pageX;\n      this.sliderFrame.style.webkitTransition = `all 0ms ${this.config.easing}`;\n      this.sliderFrame.style.transition = `all 0ms ${this.config.easing}`;\n\n      const currentSlide = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide;\n      const currentOffset = currentSlide * (this.selectorWidth / this.perPage);\n      const dragOffset = (this.drag.endX - this.drag.startX);\n      const offset = this.config.rtl ? currentOffset + dragOffset : currentOffset - dragOffset;\n      this.sliderFrame.style[this.transformProperty] = `translate3d(${(this.config.rtl ? 1 : -1) * offset}px, 0, 0)`;\n    }\n  }\n\n\n  /**\n   * mousedown event handler\n   */\n  mousedownHandler(e) {\n    // Prevent dragging / swiping on inputs, selects and textareas\n    const ignoreSiema = ['TEXTAREA', 'OPTION', 'INPUT', 'SELECT'].indexOf(e.target.nodeName) !== -1;\n    if (ignoreSiema) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    this.pointerDown = true;\n    this.drag.startX = e.pageX;\n  }\n\n\n  /**\n   * mouseup event handler\n   */\n  mouseupHandler(e) {\n    e.stopPropagation();\n    this.pointerDown = false;\n    this.selector.style.cursor = '-webkit-grab';\n    this.enableTransition();\n    if (this.drag.endX) {\n      this.updateAfterDrag();\n    }\n    this.clearDrag();\n  }\n\n\n  /**\n   * mousemove event handler\n   */\n  mousemoveHandler(e) {\n    e.preventDefault();\n    if (this.pointerDown) {\n      // if dragged element is a link\n      // mark preventClick prop as a true\n      // to detemine about browser redirection later on\n      if (e.target.nodeName === 'A') {\n        this.drag.preventClick = true;\n      }\n\n      this.drag.endX = e.pageX;\n      this.selector.style.cursor = '-webkit-grabbing';\n      this.sliderFrame.style.webkitTransition = `all 0ms ${this.config.easing}`;\n      this.sliderFrame.style.transition = `all 0ms ${this.config.easing}`;\n\n      const currentSlide = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide;\n      const currentOffset = currentSlide * (this.selectorWidth / this.perPage);\n      const dragOffset = (this.drag.endX - this.drag.startX);\n      const offset = this.config.rtl ? currentOffset + dragOffset : currentOffset - dragOffset;\n      this.sliderFrame.style[this.transformProperty] = `translate3d(${(this.config.rtl ? 1 : -1) * offset}px, 0, 0)`;\n    }\n  }\n\n\n  /**\n   * mouseleave event handler\n   */\n  mouseleaveHandler(e) {\n    if (this.pointerDown) {\n      this.pointerDown = false;\n      this.selector.style.cursor = '-webkit-grab';\n      this.drag.endX = e.pageX;\n      this.drag.preventClick = false;\n      this.enableTransition();\n      this.updateAfterDrag();\n      this.clearDrag();\n    }\n  }\n\n\n  /**\n   * click event handler\n   */\n  clickHandler(e) {\n    // if the dragged element is a link\n    // prevent browsers from folowing the link\n    if (this.drag.preventClick) {\n      e.preventDefault();\n    }\n    this.drag.preventClick = false;\n  }\n\n\n  /**\n   * Remove item from carousel.\n   * @param {number} index - Item index to remove.\n   * @param {function} callback - Optional callback to call after remove.\n   */\n  remove(index, callback) {\n    if (index < 0 || index >= this.innerElements.length) {\n      throw new Error('Item to remove doesn\\'t exist ðŸ˜­');\n    }\n\n    // Shift sliderFrame back by one item when:\n    // 1. Item with lower index than currenSlide is removed.\n    // 2. Last item is removed.\n    const lowerIndex = index < this.currentSlide;\n    const lastItem = this.currentSlide + this.perPage - 1 === index;\n\n    if (lowerIndex || lastItem) {\n      this.currentSlide--;\n    }\n\n    this.innerElements.splice(index, 1);\n\n    // build a frame and slide to a currentSlide\n    this.buildSliderFrame();\n\n    if (callback) {\n      callback.call(this);\n    }\n  }\n\n\n  /**\n   * Insert item to carousel at particular index.\n   * @param {HTMLElement} item - Item to insert.\n   * @param {number} index - Index of new new item insertion.\n   * @param {function} callback - Optional callback to call after insert.\n   */\n  insert(item, index, callback) {\n    if (index < 0 || index > this.innerElements.length + 1) {\n      throw new Error('Unable to inset it at this index ðŸ˜­');\n    }\n    if (this.innerElements.indexOf(item) !== -1) {\n      throw new Error('The same item in a carousel? Really? Nope ðŸ˜­');\n    }\n\n    // Avoid shifting content\n    const shouldItShift = index <= this.currentSlide > 0 && this.innerElements.length;\n    this.currentSlide = shouldItShift ? this.currentSlide + 1 : this.currentSlide;\n\n    this.innerElements.splice(index, 0, item);\n\n    // build a frame and slide to a currentSlide\n    this.buildSliderFrame();\n\n    if (callback) {\n      callback.call(this);\n    }\n  }\n\n\n  /**\n   * Prepernd item to carousel.\n   * @param {HTMLElement} item - Item to prepend.\n   * @param {function} callback - Optional callback to call after prepend.\n   */\n  prepend(item, callback) {\n    this.insert(item, 0);\n    if (callback) {\n      callback.call(this);\n    }\n  }\n\n\n  /**\n   * Append item to carousel.\n   * @param {HTMLElement} item - Item to append.\n   * @param {function} callback - Optional callback to call after append.\n   */\n  append(item, callback) {\n    this.insert(item, this.innerElements.length + 1);\n    if (callback) {\n      callback.call(this);\n    }\n  }\n\n\n  /**\n   * Removes listeners and optionally restores to initial markup\n   * @param {boolean} restoreMarkup - Determinants about restoring an initial markup.\n   * @param {function} callback - Optional callback function.\n   */\n  destroy(restoreMarkup = false, callback) {\n    this.detachEvents();\n\n    this.selector.style.cursor = 'auto';\n\n    if (restoreMarkup) {\n      const slides = document.createDocumentFragment();\n      for (let i = 0; i < this.innerElements.length; i++) {\n        slides.appendChild(this.innerElements[i]);\n      }\n      this.selector.innerHTML = '';\n      this.selector.appendChild(slides);\n      this.selector.removeAttribute('style');\n    }\n\n    if (callback) {\n      callback.call(this);\n    }\n  }\n}\n"],"names":["Siema","options","config","mergeSettings","selector","this","document","querySelector","Error","resolveSlidesNumber","selectorWidth","offsetWidth","innerElements","slice","call","children","currentSlide","loop","startIndex","length","Math","max","min","perPage","transformProperty","webkitOrNot","forEach","method","_this","bind","init","addEventListener","resizeHandler","draggable","pointerDown","drag","touchstartHandler","touchendHandler","touchmoveHandler","mousedownHandler","mouseupHandler","mouseleaveHandler","mousemoveHandler","clickHandler","removeEventListener","attachEvents","style","overflow","direction","rtl","buildSliderFrame","onInit","widthItem","itemsToBuild","sliderFrame","createElement","width","enableTransition","cursor","docFragment","createDocumentFragment","i","element","buildSliderFrameItem","cloneNode","appendChild","innerHTML","slideToCurrent","elm","elementContainer","cssFloat","float","_typeof","viewport","window","innerWidth","howManySlides","callback","beforeChange","disableTransition","mirrorSlideIndex","moveTo","offset","dragDistance","endX","startX","onChange","webkitTransition","easing","transition","duration","index","_this2","movement","movementDistance","abs","howManySliderToSlide","multipleDrag","ceil","slideToNegativeClone","slideToPositiveClone","threshold","prev","next","preventClick","e","indexOf","target","nodeName","stopPropagation","touches","pageX","startY","pageY","updateAfterDrag","clearDrag","letItGo","preventDefault","currentOffset","dragOffset","lowerIndex","lastItem","splice","item","shouldItShift","insert","restoreMarkup","detachEvents","slides","removeAttribute","settings","userSttings","attrname","documentElement","transform"],"mappings":"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"}